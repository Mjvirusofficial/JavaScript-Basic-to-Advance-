  
############################## Oops in javascript ❤️ || Date 2 August || Relevel by unacadamy ####################################

1.What is Oops?
Oops stands for Object Oriented Programming language. And the main purpose of the oops is to deal with real world entities using 
programming language.
 
#Features of Oops are:-
-> Class
-> Object
-> Encapsulation
-> Abastraction
-> Inheritance
-> Polymorphism -> (i)  Overloading
                -> (ii) Overriding

1.What is class in Opps?
-> Class is a bluepriny of real-life entities.

-> It defines the characteristics of an object like colour, shape, size.

-> In real world class is the best example of human beings and it's 
properties is colour, size, 2 Eye, 2 Ear, 2 Hand etc.

#Program of a class with obj:- 
class Mjvirus {
  constructor(fname, lname){
    this.M = fname;
    this.J = lname;
  }

  virus(){
    console.log(`Your 1st name is:-  ${this.M}\nYour last name is:- ${this.J}`)
  }
}

let Mj = new Mjvirus("Mj","virus")
Mj.virus()
________________________________________________________________________________________________________________________________

2. What is objects in Opps?
-> Object is an instance of class.

-> Which have key value pair sometimes having properties and method.

-> Example of object is:- let's say a cup which have some properties like it's colour, it's design, its shape, it's material etc.

-> Here, cup is object and properties is it's look like means, colour, shape and design etc.

#We can create an object in four ways:- 
1.Object.create
2.Object litral
3.Constructor
4.Class 

1.Program of Object.create():- 
let mj = Object.create({
  fname: "Mj",
  lname: "virus"
})
console.log(mj)
console.log(mj.fname)

Object create is a method which is used to create a new object using an existing object called prototype.
________________________________________________________________________________________________________

2.Program of Object litral:-

let virus = {
  name: "Deepak Ravidas",
  age: 18
}
delete virus.name;
console.log(virus)

Object litrals is a comma-separated list of name-value pair which inside of curly braces.
________________________________________________________________________________________________________

This is the @wesome difference between object create and object litrals:-

let mj = Object.create({
  fname: "Mj",
  lname: "virus"
})
delete mj.name;
console.log(mj.fname)


let virus = {
  name: "Deepak Ravidas",
  age: 18
}
delete virus.name;
console.log(virus)

We can delete any item of object when we use object litrals.

But we can't delete any element in object when we create an object using object.create.
_________________________________________________________________________________________________________

#Constructor:
● A constructor is a function in javascript that is called when an
object of a class is initialised using the “new” keyword.
● Constructor is used to set the values of class properties
during initialisation.
● Construction can be defined only once in a class.
● Super keyword is used inside the constructor to call the
constructor of the parent class. More detail on this we will
see in a later section.

_________________________________________________________________________________________________________

#this:
This keyword is used in javascript to refer to an object.
Which object is being referred to depends on how it's used.
When used in method, this keyword refers to the object

When used alone this refers to global Object.
var demo = this;
console.log(demo)

_________________________________________________________________________________________________________

3.What is Encapsulation in Oops?
Encapsulation is a mechanism which is used to wrapped all the data and method in a single unit.
In Encapsulation declare the class varrible as private________________________________________#

#Program of Encapsulation:-

class MyName{
#name = "Mj"
}

let obj1 = new MyName()
console.log(obj1.name)

#Using getName & SetName we can access the private properties in javascript.
#Program look like_________________________________________________________#

 #name = "Deepak";

    getName(){
        return this.#name;
    }

    setName(n){
        this.#name = n;
    }
}

let simp = new simple()
console.log(simp.getName())

_________________________________________________________________________________________________________

4.What is Abastraction in Oops?
Abastraction is also the most important feature in javascript,
It is used to hide the non-essential features of the program

In other word it is the process which is used to hiding the implementation
detail from the user, Showing only the highlighted set of service to the user.

In Advantages of Abastraction:- 
First is security and Second is enhencement.

class Mjvirus{
    constructor(array)
    {
        this.a = array
    }
    sorting()
    {
       return this.a.sort((a,b) => a-b)
    }
}

let obj = new Mjvirus([5,4,3,2,1])
console.log(obj.sorting())

_________________________________________________________________________________________________________

5.What is Inheritance ?
Inheritance is also one of the most important feature in javascript 
which is used to provide the reuseablity in the program___________#

In inheritence, One class access all the properties of another class
by help of extends keyword_________________________________________#

#Iska mtlb @gar aap 4 new new class bnaty ho to @aapko usey access 
krny k liye different different object bnany ki jarurat nii h You
can access all the data and method by creating only one object 
but before this you have to extends your class_____________________#

class parent{
    constructor(name,age){
    this.Name = name;
    this.Age = age;
    }
}

class child extends parent{
    Display(){
        console.log(`Hey ${Name},\n Your are ${Age} years old.`)
        // See, here this class access the all properties of own parent class
    }
}

obj = new child("Mj virus",18)
console.log(obj)

________________________________________________________________________________________________________

6.What is Polymorphism?
It is define as a way to perform one operation or action in multiple forms.
In other word, Polymorphism came from greak word which means having same 
functon different beheaviour______________________________________________#

#There are two types of polymorphism:-
1. Overloading
2. Overriding

javascript doesn't support Overloading,

#Program of Overloading:-

class Overloading{
    Student(name){
        console.log("name:-",name)
    }

    Student(name,age){
        console.log("Name:-",name)
        console.log("Age:-",age)
    }
}

let obj = new Overloading()
obj.Student("Deepak",18)


#Program of Overriding:-

class virus{
    MyName(name)
    {
      console.log("Name:- ",name)
    }
}

class Mj extends virus{
    MyName(name,cource)
    {
      console.log("Name:- ",name,"Cource:- ",cource)
    }
}

let obj = new Mj;
obj.MyName("Deepak Ravidas","F.E")
_____________________________________________________________________________________________________________________________



____________________________________________________________________________________________


_____________________________________________________________________________________________________________________________
 
______________________________________________________________________________________________________________________________________________
#Async & Await...!